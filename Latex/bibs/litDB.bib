%---------------DDD-------------------------

@Book{brugge,
author="Br{\"u}gge, Bernd
and Dutoit, Allen Henry",
title="Object-oriented software engineering: using UML, patterns, and Java",
year="2010",
edition="3. ed., international ed.",
publisher="Pearson",
address="Boston",
note="Bernd Bruegge {\&} Allen H. Dutoit",
note="Literaturangaben",
isbn="0138152217",
language="English"
}

@Book{posch,
author="Posch, Torsten
and Birken, Klaus
and Gerdom, Michael",
title="Basiswissen Softwarearchitektur: verstehen, entwerfen, wiederverwenden",
year="2011",
edition="3., aktualisierte und erw. Aufl.",
publisher="dpunkt-Verl.",
address="Heidelberg",
keywords="Software architecture; Computer architecture; Computer software",
note="Torsten Posch; Klaus Birken; Michael Gerdom",
note="Literaturverz. S. 343 - 348",
note="Archivierung/Langzeitarchivierung gew{\"a}hrleistet PEBW pdager DE-31",
isbn="9783898647366",
language="German"
}


@Book{evans,
author="Evans, Eric",
title="Domain-driven design: tackling complexity in the heart of software",
year="2007",
edition="11. printing",
publisher="Addison-Wesley",
address="Upper Saddle River, NJ [u.a.]",
keywords="Computer software; Development; Object-oriented programming (Computer science)",
note="Eric Evans",
note="Literaturverz. S. 515 - 516",
isbn="0321125215",
language="English"
}

@Book{newman,
author="Newman, Sam",
title="Microservices: Konzeption und Design",
year="2015",
edition="1. Aufl.",
publisher="mitp-Verl.",
address="[Frechen]",
note="Sam Newman. {\"U}bers. aus dem Amerikan. von Knut Lorenzen",
isbn="3958450814",
language="German"
}

@Book{dowalil,
author="Dowalil, Herbert",
title="Grundlagen des modularen Softwareentwurfs: der Bau langlebiger Mikro- und Makro-Architekturen wie Microservices und SOA 2.0",
year="2018",
publisher="Hanser",
address="M{\"u}nchen",
keywords="Domain-Driven-Design; Microservice; Softwarearchitektur; Software-Architektur; Softwareentwicklung; Software-Entwicklung",
note="Herbert Dowalil",
note="Die 2. Auflage erschien unter dem Titel: Modulare Softwarearchitektur.Nachhaltiger Entwurf durch Microservices, Modulithen und SOA 2.0",
note="Literaturverzeichnis: Seite 197-200",
isbn="9783446455092",
language="German"
}

@Book{daschner,
author="Daschner, Sebastian",
title="Architecting modern Java EE applications: designing lightweight, business-oriented enterprise applications in the age of cloud, containers, and Java EE 8",
year="2017",
publisher="Packt",
address="Birmingham",
abstract="Find out how to craft effective, business-oriented Java EE 8 applications that target customer's demands in the age of Cloud platforms and container technology.  About This Book  * Understand the principles of modern Java EE and how to realize effective architectures * Gain knowledge of how to design enterprise software in the age of automation, Continuous Delivery and Cloud platforms * Learn about the reasoning and motivations behind state-of-the-art enterprise Java technology, that focuses on business  Who This Book Is For  This book is for experienced Java EE developers who are aspiring to become the architects of enterprise-grade applications, or software architects who would like to leverage Java EE to create effective blueprints of applications.  What You Will Learn  * What enterprise software engineers should focus on * Implement applications, packages, and components in a modern way * Design and structure application architectures * Discover how to realize technical and cross-cutting aspects * Get to grips with containers and container orchestration technology * Realize zero-dependency, 12-factor, and Cloud-native applications * Implement automated, fast, reliable, and maintainable software tests * Discover distributed system architectures and their requirements  In Detail  Java EE 8 brings with it a load of features, mainly targeting newer architectures such as microservices, modernized security APIs, and cloud deployments. This book will teach you to design and develop modern, business-oriented applications using Java EE 8. It shows how to structure systems and applications, and how design patterns and Domain Driven Design aspects are realized in the age of Java EE 8. You will learn about the concepts and principles behind Java EE applications, and how to effect communication, persistence, technical and cross-cutting concerns, and asynchronous behavior. This book covers Continuous Delivery, DevOps, infrastructure-as-code, containers, container orchestration technologies, such as Docker and Kubernetes, and why and especially how Java EE fits into this world. It also covers the requirements behind containerized, zero-dependency applications and how modern Java EE application servers support these approaches. You will also learn about automated, fast, and reliable software tests, in different test levels, scopes, and test technologies. This book covers the prerequisites and challenges of distributed systems that lead to microservice, shared-nothing architectures. The challenges and solutions of consistency versus scalability will further lead us to event sourcing, event-driven architectures, and the CQRS principle. This book also includes the nuts and bolts of application performance as well as how to realize resilience, logging, monitoring and tracing in a modern enterprise world. Last but not least the demands of securing enterprise systems are covered. By the end, you will understand the ins and outs of Java EE so that you can make critical design decisions that not only live up to, but also surpass your clients' expectations.  Style and approach  This book focuses on solving business problems and meeting customer demands in the enterprise world. It covers how to create enterprise applications with reasonable technology choices, free of cargo-cult and over-engineering. The aspects shown in this book not only demonstrate how to realize a certain solution, but also explain its motivations and reasoning.",
note="Sebastian Daschner ; Foreword by: David Blevins, Founder and CEO, Tomitribe",
isbn="1788393856",
language="English"
}

@online{ritter,
  author = {Rafael Ritter},
  title = {Domain Event: The Missing Building Block},
  year = 2023,
  howpublished = {\url{https://ilegra.com/blog/domain-event-the-missing-building-block/}},
  note = {Zugriff am 19.11.2023}
}
%---------------------MICROSERVICES------------------------

@Book{wolff,
author="Wolff, Eberhard",
title="Microservices: Grundlagen flexibler Softwarearchitekturen",
year="2016",
edition="1., korrigierter Nachdruck",
publisher="dpunkt.verlag",
address="Heidelberg",
note="Eberhard Wolff",
note="Literaturangaben",
isbn="3864903130",
language="German"
}

@Book{erl,
author="Erl, Thomas",
title="Service-oriented architecture: analysis and design for services and microservices",
series="The Prentice Hall service technology series from Thomas Erl",
year="2017",
edition="Second edition",
publisher="Prentice Hall ; Service Tech Press",
address="Boston",
keywords="Service-oriented architecture (Computer science); System analysis; System design; Web services; aComputer architecture; aWeb services; aXML (Document markup language)",
note="Thomas Erl ; with contributions by Paulo Merson and Roger Stoffers",
isbn="0133858588",
language="English"
}


@Book{percival,
author="Percival, Harry J. W.
and Gregory, Robert G.",
title="Architecture patterns with Python: enabling test-driven development, domain-driven design, and event-driven microservices",
year="2020",
edition="First edition",
publisher="O'Reilly",
address="Beijing",
note="Harry Percival and Bob Gregory",
note="Includes index",
isbn="1492052205",
language="English"
}

@Book{richards,
author="Richards, Mark
and Ford, Neal",
translator="Lang, J{\o}rgen W.",
title="Handbuch moderner Softwarearchitektur: Architekturstile, Patterns und Best Practices",
year="2021",
edition="1. Auflage",
publisher="O'Reilly",
address="Heidelberg",
keywords="Software engineering; Model-driven software architecture",
note="Mark Richards und Neal Ford ; deutsche {\"U}bersetzung von J{\o}rgen W. Lang",
isbn="9783960091493",
language="German"
}

@online{fowlerlewis,
  author    = "James Lewis and Martin Fowler",
  title     = "Microservices - a definition of this new architectural term",
  year      = "2014",
  url       = {https://martinfowler.com/articles/microservices.html},
  note = {\url{https://martinfowler.com/articles/microservices.html}, Zugriff am 01.11.2023},
  publisher = "Martin Fowler's Website"
}

@online{richardson,
  author    = "Chris Richardson",
  title     = "Pattern: Microservice chassis",
  url       = "https://microservices.io/patterns/microservice-chassis.html",
  note = {\url{https://microservices.io/patterns/microservice-chassis.html}, Zugriff am 01.11.2023},
  publisher = "Chris Richardson's Website"
}

@online{ajilGithub,
  author={Rademacher, Florian and Sorgalla, Jonas and Sachweh, Sabine},
  title     = "AjiL Tool Suite Repository",
  url       = "https://github.com/SeelabFhdo/AjiL",
  note = {\url{https://github.com/SeelabFhdo/AjiL}, Zugriff am 17.01.2024},
}


@Book{fowlersusan,
author="Fowler, Susan J.",
title="Production-ready microservices: building standardized systems across an engineering organization",
year="2017",
edition="First edition",
publisher="O{\textasciiacute}Reilly",
address="Beijing",
keywords="Application software; Development; Computer networks; Management; Computer network architectures",
note="Susan J. Fowler",
isbn="9781491965979",
language="English"
}

@Book{sommerville,
author="Sommerville, Ian",
title="Engineering software products: an introduction to modern software engineering",
year="2020",
publisher="Pearson",
address="Hoboken, NJ",
keywords="Software engineering; Computer software; Development",
note="Ian Sommerville",
note="Includes bibliographical references and indexes",
note="Hier auch sp{\"a}ter erschienene, unver{\"a}nderte Nachdrucke",
isbn="013521064X",
language="English"
}


%------------------------------------CLOUD-INFRASTRUKTUR---------------------------------


@Book{stender,
author="Stender, Daniel",
title="Cloud-Infrastrukturen: das Handbuch f{\"u}r DevOps-Teams und Administratoren",
series="Rheinwerk computing",
year="2020",
edition="1. Auflage",
publisher="Rheinwerk Computing",
address="Bonn",
abstract="Cloud-Computing stellt IT-Infrastrukturen, die nicht auf einem lokalen Rechner installiert sind, {\"u}ber ein Rechnernetz (Cloud) zur Verf{\"u}gung. Nur kurz erw{\"a}hnt wird Cloud-Computing bisher in dem in mehreren Auflagen erschienen Handbuch von S. Kersken: ``IT-Handbuch f{\"u}r Fachinformatiker'', bei V. Krypczyk: ``Handbuch f{\"u}r Softwareentwickler'' oder in dem Lehrbuch {\"u}ber agile Methoden von H. Timinger: ``Modernes Projektmanagement''. Das Buch hier versteht sich als umfassende praxisorientierte Einf{\"u}hrung in Cloud-Computing mit den Schwerpunkten Einsatzgebiete, Anbieter, Werkzeuge und Arbeitstechniken und st{\"u}tzt sich auf viele Beispiele. Auch wird angegeben, wo Sicherheitsprobleme auftreten k{\"o}nnen und wie Workflows optimal organisiert werden. Alle Codebeispiele werden auf einer Webseite zum Buch zum Download bereitgestellt. Das Buch beginnt mit einer kurzen Einf{\"u}hrung in Public Cloud Computing, behandelt dann ausf{\"u}hrlich grundlegende Fertigkeiten und Werkzeuge f{\"u}r Cloud-Engineers und endet mit dem Testen von Cloud-Instanzen. (2)",
note="Daniel Stender",
isbn="9783836269483",
language="German"
}

@Book{riti,
author="Riti, Pierluigi",
title="Pro DevOps with Google Cloud Platform: with Docker, Jenkins, and Kubernetes",
series="For professionals by professionals",
year="2018",
publisher="Apress",
address="[Berkeley, California]",
keywords="Application software; Development; Computer software; Cloud computing",
abstract="Introduction to DevOps -- Introduction to GCP -- Introduction to continuous integration and delivery -- Containerization with Docker and Kubernetes -- Continuous delivery with GCP and Jenkins -- Microservices architecture with GCP -- Monitoring in GCP -- Creating and managing infrastructure in GCP -- Identity and access management with Google Cloud Platform -- Network configuration and management in GCP",
note="Pierluigi Riti",
note="Includes index",
isbn="1484238966",
language="English"
}
@Book{burns1,
author="Burns, Brendan
and Beda, Joe
and Hightower, Kelsey
and Evenson, Lachlan",
title="Kubernetes: eine kompakte Einf{\"u}hrung",
year="2023",
edition="3., aktualisierte und erweiterte Auflage",
publisher="dpunkt.verlag",
address="Heidelberg",
note="Brendan Burns, Joe Beda, Kelsey Hightower, Lachlan Evenson",
note="Archivierung/Langzeitarchivierung gew{\"a}hrleistet PEBW pdager DE-31",
isbn="9783864909597",
language="German"
}

@Book{burns2,
author="Burns, Brendan",
translator="Demmig, Thomas",
title="Verteilte Systeme mit Kubernetes entwerfen: Patterns und Prinzipien f{\"u}r skalierbare und zuverl{\"a}ssige Services",
year="2018",
edition="1. Auflage",
publisher="O'Reilly",
address="Heidelberg",
keywords="kubernetes; docker; container; devops; continous-delivery; sidecars; topz; ambassadors; adapters; microservices; faas; pattern; cloud; orchestrators; skalierbar; designing distributed systems",
note="Brendan Burns ; deutsche {\"U}bersetzung von Thomas Demmig",
note="Archivierung/Langzeitarchivierung gew{\"a}hrleistet PEBW pdager DE-31",
isbn="3960090889",
language="German"
}

@article{burns3,
author = {Burns, Brendan and Grant, Brian and Oppenheimer, David and Brewer, Eric and Wilkes, John},
title = {Borg, Omega, and Kubernetes: Lessons Learned from Three Container-Management Systems over a Decade},
year = {2016},
issue_date = {January-February 2016},
publisher = {Association for Computing Machinery},
address = {New York, NY, USA},
volume = {14},
number = {1},
issn = {1542-7730},
note = {\url{https://doi.org/10.1145/2898442.2898444}},
url = {https://doi.org/10.1145/2898442.2898444},
doi = {10.1145/2898442.2898444},
abstract = {Though widespread interest in software containers is a relatively recent phenomenon, at Google we have been managing Linux containers at scale for more than ten years and built three different container-management systems in that time. Each system was heavily influenced by its predecessors, even though they were developed for different reasons. This article describes the lessons we’ve learned from developing and operating them.},
journal = {Queue},
month = {jan},
pages = {70–93},
numpages = {24}
}


%--------------------------------------MDSD--------------------------------------------
@Book{rempp,
title="Model Driven SOA: anwendungsorientierte Methodik und Vorgehen in der Praxis",
series="Xpert.press",
year="2011",
publisher="Springer",
address="Berlin",
keywords="Computer science; Electronic data processing; Software engineering",
note="Gerhard Rempp; Mark Akermann; Martin L{\"o}ffler; Jens Lehmann. Mit Ill. von Martin Starzmann",
note="Literaturangaben",
note="Archivierung/Langzeitarchivierung gew{\"a}hrleistet PEBW pdager DE-31",
isbn="3642144691",
language="German"
}

@Article{rademacher,
  author={Rademacher, Florian and Sorgalla, Jonas and Sachweh, Sabine},
  journal={IEEE Software}, 
  title={Challenges of Domain-Driven Microservice Design: A Model-Driven Perspective}, 
  year={2018},
  note = {\url{https://ieeexplore.ieee.org/document/8354426}},
  volume={35},
  number={3},
  pages={36-43},
  doi={10.1109/MS.2018.2141028}}

@article{zalila,
title = {Model-driven cloud resource management with OCCIware},
journal = {Future Generation Computer Systems},
volume = {99},
pages = {260-277},
year = {2019},
issn = {0167-739X},
doi = {https://doi.org/10.1016/j.future.2019.04.015},
url = {https://www.sciencedirect.com/science/article/pii/S0167739X18306071},
note = {\url{https://www.sciencedirect.com/science/article/pii/S0167739X18306071}},
author = {Faiez Zalila and Stéphanie Challita and Philippe Merle},
keywords = {Cloud computing, Service computing, Model-driven engineering (MDE), Meta modeling, Models@runtime, Software standards, Computer-aided software engineering, Distributed information systems, Modeling environments},
abstract = {Cloud computing has emerged as the main paradigm for hosting and delivering computing resources as services over Internet. It provides a delivery model for computing resources at infrastructure, platform, and software levels. However, there is a plethora of cloud providers offering different resource management interfaces. Due to this diversity, the consumption, provisioning, management, and supervision of cloud resources are subjected to four key issues, i.e., heterogeneity, interoperability, integration, and portability. To cope with these issues, Open Cloud Computing Interface (OCCI) is proposed as a community-based and open recommendation standard for managing any kind of cloud resources. Currently, only runtime implementations exist for OCCI, and each one targets a specific cloud service model such as Infrastructure as a Service (IaaS), Platform as a Service (PaaS), or Software as a Service (SaaS). Thus, OCCI lacks an approach to model and execute different OCCI artifacts. Our approach provides a generic modeling framework coupled with a generic runtime implementation. In this article, we propose the OCCIware approach, which represents the first approach to design, validate, generate, implement, deploy, execute, and supervise everything as a service with OCCI. This approach provides OCCIware Studio, the first model-driven tool chain for OCCI. It is built around OCCIware Metamodel, which defines the static semantics for the OCCI standard in Ecore and OCL. In addition, it proposes OCCIware Runtime, the first generic OCCI runtime implementation targeting all the cloud service models (IaaS, PaaS, and SaaS). OCCIware provides a unique and unified framework to manage OCCI artifacts and, at the same time, it represents a factory to build cloud domain-specific modeling frameworks where each framework targets a specific cloud domain. OCCIware has been applied in various cloud domains and use-cases, which validate its applicability.}
}

@article{argon,
  author={Sandobalin, Julio and Insfran, Emilio and Abrahão, Silvia},
  booktitle={2019 ACM/IEEE 22nd International Conference on Model Driven Engineering Languages and Systems Companion (MODELS-C)}, 
  title={ARGON: A Model-Driven Infrastructure Provisioning Tool}, 
  year={2019},
  volume={},
  number={},
  pages={738-742},
  doi={10.1109/MODELS-C.2019.00114},
  note={\url{https://ieeexplore.ieee.org/abstract/document/8904494}}
  }
 
 
@article{sun,
  author={Sun, Chang-ai and Wang, Jing and Liu, Zhenxian and Han, Yanbo},
  booktitle={2021 IEEE 45th Annual Computers, Software, and Applications Conference (COMPSAC)}, 
  title={A Variability-Enabling and Model-Driven Approach to Adaptive Microservice-based Systems}, 
  year={2021},
  volume={},
  number={},
  pages={968-973},
  doi={10.1109/COMPSAC51774.2021.00130},
  note={\url{https://ieeexplore.ieee.org/abstract/document/9529482}}
  }
  
@article{mapper,
author = {Kapferer, Stefan and Zimmermann, Olaf},
year = {2020},
month = {01},
pages = {299-306},
title = {Domain-specific Language and Tools for Strategic Domain-driven Design, Context Mapping and Bounded Context Modeling},
doi = {10.5220/0008910502990306},
note = {\url{https://www.scitepress.org/Papers/2020/89105/89105.pdf}}
}

@article{doml,
author="Chiari, Michele
and Xiang, Bin
and Nedeltcheva, Galia Novakova
and Di Nitto, Elisabetta
and Blasi, Lorenzo
and Benedetto, Debora
and Niculut, Laurentiu",
editor="Indulska, Marta
and Reinhartz-Berger, Iris
and Cetina, Carlos
and Pastor, Oscar",
title="DOML: A New Modelling Approach to Infrastructure-as-Code",
booktitle="Advanced Information Systems Engineering",
year="2023",
publisher="Springer Nature Switzerland",
address="Cham",
pages="297--313",
abstract="One of the main DevOps practices is the automation of resource provisioning and deployment of complex software. This automation is enabled by the explicit definition of Infrastructure-as-Code (IaC), i.e., a set of scripts, often written in different modelling languages, which defines the infrastructure and applications to be deployed.",
isbn="978-3-031-34560-9",
note="\url{https://link.springer.com/chapter/10.1007/978-3-031-34560-9_18/#citeas}"
}

@article{edmonds,
  title={Open cloud computing interface-core},
  author={Edmonds, OCCI-WG Andy and Papaspyrou, Alexander and Metsch, Thijs},
  journal={Update},
  pages={6},
  year={2016}
}

%--------------------------------------unsortiert--------------------------------------------
@article{loeffler,
  title="{Entwicklung einer Domänenspezifischen Sprache für Webdienste}",
  author={Löffler, Patrik},
  year={2023}
}

@online{gcloudsdk,
  author    = "{Google LLC}",
  title     = "{Google Cloud CLI installieren}",
  note = {\url{https://cloud.google.com/sdk/docs/install-sdk?hl=de#linux}, Zugriff am 22.01.2024},
}

@online{kubernetes,
  author    = "{Cloud Native Computing Foundation}",
  title     = "{Installieren und konfigurieren von kubectl}",
  note = {\url{https://kubernetes.io/de/docs/tasks/tools/install-kubectl/}, Zugriff am 22.01.2024},
}

@online{kubernetesauth,
  author    = "{Google LLC}",
  title     = "{Here's what to know about changes to kubectl authentication coming in GKE v1.26}",
  note = {\url{https://cloud.google.com/blog/products/containers-kubernetes/kubectl-auth-changes-in-gke?hl=en}, Zugriff am 22.01.2024},
}

@online{docker,
  author    = "{Docker, Inc.}",
  title     = "{Install Docker Desktop on Linux}",
  note = {\url{https://docs.docker.com/desktop/install/linux-install/}, Zugriff am 22.01.2024},
}

@online{gradle,
  author    = "{Gradle Inc.}",
  title     = "{Installing Gradle}",
  note = {\url{https://docs.gradle.org/current/userguide/installation.html}, Zugriff am 22.01.2024},
}


@online{acceleo,
  author    = "{Eclipse Foundation}",
  title     = "{Acceleo/User Guide}",
  note = {\url{https://wiki.eclipse.org/Acceleo/User_Guide}, Zugriff am 22.01.2024},
}

@online{oreillymap,
  author    = "Vladik Khononov",
  title     = "{What Is Domain-Driven Design?}",
  note = {\url{https://www.oreilly.com/library/view/what-is-domain-driven/9781492057802/ch04.html}, Zugriff am 22.01.2024},
}

@misc{http,
    series =    {Request for Comments},
    number =    7235,
    howpublished =  {RFC 7235},
    publisher = {RFC Editor},
    doi =       {10.17487/RFC7235},
    url =       {https://www.rfc-editor.org/info/rfc7235},
    author =    {Roy T. Fielding and Julian Reschke},
    title =     {{Hypertext Transfer Protocol (HTTP/1.1): Authentication}},
    pagetotal = 19,
    year =      2014,
    month =     jun,
    abstract =  {The Hypertext Transfer Protocol (HTTP) is a stateless application- level protocol for distributed, collaborative, hypermedia information systems. This document defines the HTTP Authentication framework.},
}

@online{springboot,
  author    = "VMware",
  title     = "Spring Boot Reference Documentation",
  note = {\url{https://docs.spring.io/spring-boot/docs/current/reference/htmlsingle/}, Zugriff am 22.01.2024},
}

@online{spring,
  author    = "VMware",
  title     = "Spring Framework Documentation",
  note = {\url{https://docs.spring.io/spring-framework/reference/index.html}, Zugriff am 22.01.2024},
}

@Book{simons,
author="Simons, Michael",
title="Spring Boot 2: moderne Softwareentwicklung mit Spring 5",
year="2018",
edition="1. Auflage",
publisher="dpunkt.verlag",
address="Heidelberg",
note="Michael Simons",
note="Archivierung/Langzeitarchivierung gew{\"a}hrleistet PEBW pdager DE-31",
isbn="3864905257",
language="German"
}

@online{nist,
  author    = "{National Institute of Standards and Technology}",
  title     = "{The NIST Definition of Cloud Computing}",
  note = {\url{https://nvlpubs.nist.gov/nistpubs/legacy/sp/nistspecialpublication800-145.pdf}, Zugriff am 22.01.2024},
}

@online{gcpdocs,
  author    = "{Google LLC}",
  title     = "{Google Cloud-Dokumentation}",
  note = {\url{https://cloud.google.com/docs?hl=de}, Zugriff am 22.01.2024},
}

@online{mustermodell,
  author    = "Löffler, Patrik",
  title     = "{Microservice-Metamodell EMF Modellvorlage}",
  note = {\url{https://github.com/Tinkerbell0807/ba/tree/main/TemplateModel}, Zugriff am 29.01.2024},
}

@online{bspprojekt,
  author    = "Löffler, Patrik",
  title     = "{Microservice-Metamodell Migrations-Beispielprojekt}",
  note = {\url{https://github.com/Tinkerbell0807/ba/tree/main/Beispielservice_Protected_Blocks/order-service}, Zugriff am 29.01.2024},
}

@online{rewrite,
  author    = "{Moderne}",
  title     = "{OpenRewrite Webpage}",
  note = {\url{https://docs.openrewrite.org/}, Zugriff am 29.01.2024},
}

@online{github,
  author    = "Löffler, Patrik",
  title     = "{GitHub-Repo}",
  note = {\url{https://github.com/Tinkerbell0807/ba/}, Zugriff am 30.01.2024},
}

